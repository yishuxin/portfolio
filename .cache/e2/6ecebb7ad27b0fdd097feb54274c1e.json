{"id":"node_modules/@pixi/mixin-get-global-position/lib/mixin-get-global-position.es.js","dependencies":[{"name":"/Users/patricksheen/Desktop/patrick/node_modules/@pixi/mixin-get-global-position/lib/mixin-get-global-position.es.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/patricksheen/Desktop/patrick/package.json","includedInParent":true,"mtime":1557963793171},{"name":"/Users/patricksheen/Desktop/patrick/node_modules/@pixi/mixin-get-global-position/package.json","includedInParent":true,"mtime":1557963792585},{"name":"@pixi/display","loc":{"line":8,"column":30},"parent":"/Users/patricksheen/Desktop/patrick/node_modules/@pixi/mixin-get-global-position/lib/mixin-get-global-position.es.js","resolved":"/Users/patricksheen/Desktop/patrick/node_modules/@pixi/display/lib/display.es.js"},{"name":"@pixi/math","loc":{"line":9,"column":22},"parent":"/Users/patricksheen/Desktop/patrick/node_modules/@pixi/mixin-get-global-position/lib/mixin-get-global-position.es.js","resolved":"/Users/patricksheen/Desktop/patrick/node_modules/@pixi/math/lib/math.es.js"}],"generated":{"js":"\"use strict\";\n\nvar _display = require(\"@pixi/display\");\n\nvar _math = require(\"@pixi/math\");\n\n/*!\n * @pixi/mixin-get-global-position - v5.0.1\n * Compiled Mon, 06 May 2019 04:23:34 UTC\n *\n * @pixi/mixin-get-global-position is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {Point} point - The point to write the global value to. If null a new point will be returned\n * @param {boolean} skipUpdate - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {Point} The updated point.\n */\n_display.DisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point, skipUpdate) {\n  if (point === void 0) point = new _math.Point();\n  if (skipUpdate === void 0) skipUpdate = false;\n\n  if (this.parent) {\n    this.parent.toGlobal(this.position, point, skipUpdate);\n  } else {\n    point.x = this.position.x;\n    point.y = this.position.y;\n  }\n\n  return point;\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../src/index.js","name":null,"original":{"line":15,"column":0},"generated":{"line":26,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":14},"generated":{"line":26,"column":23}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":0},"generated":{"line":26,"column":32}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":24},"generated":{"line":26,"column":33}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":0},"generated":{"line":26,"column":50}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":44},"generated":{"line":26,"column":53}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":53},"generated":{"line":26,"column":62}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":44},"generated":{"line":26,"column":79}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":71},"generated":{"line":26,"column":80}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":44},"generated":{"line":26,"column":85}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":92},"generated":{"line":26,"column":87}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":44},"generated":{"line":26,"column":97}},{"source":"../src/index.js","name":null,"original":{"line":16,"column":0},"generated":{"line":26,"column":99}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":76},"generated":{"line":27,"column":29}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":79},"generated":{"line":27,"column":32}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":83},"generated":{"line":27,"column":36}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":79},"generated":{"line":27,"column":47}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":102},"generated":{"line":28,"column":39}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":105},"generated":{"line":28,"column":42}},{"source":"../src/index.js","name":null,"original":{"line":17,"column":4},"generated":{"line":30,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":17,"column":8},"generated":{"line":30,"column":6}},{"source":"../src/index.js","name":null,"original":{"line":17,"column":13},"generated":{"line":30,"column":11}},{"source":"../src/index.js","name":null,"original":{"line":17,"column":4},"generated":{"line":30,"column":17}},{"source":"../src/index.js","name":null,"original":{"line":18,"column":4},"generated":{"line":30,"column":19}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":8},"generated":{"line":31,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":13},"generated":{"line":31,"column":9}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":8},"generated":{"line":31,"column":15}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":20},"generated":{"line":31,"column":16}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":8},"generated":{"line":31,"column":24}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":29},"generated":{"line":31,"column":25}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":34},"generated":{"line":31,"column":30}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":8},"generated":{"line":31,"column":38}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":44},"generated":{"line":31,"column":40}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":8},"generated":{"line":31,"column":45}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":51},"generated":{"line":31,"column":47}},{"source":"../src/index.js","name":null,"original":{"line":19,"column":8},"generated":{"line":31,"column":57}},{"source":"../src/index.js","name":null,"original":{"line":20,"column":5},"generated":{"line":32,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":17,"column":4},"generated":{"line":32,"column":3}},{"source":"../src/index.js","name":null,"original":{"line":22,"column":4},"generated":{"line":32,"column":9}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":8},"generated":{"line":33,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":8},"generated":{"line":33,"column":4}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":13},"generated":{"line":33,"column":9}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":14},"generated":{"line":33,"column":10}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":8},"generated":{"line":33,"column":11}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":18},"generated":{"line":33,"column":14}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":23},"generated":{"line":33,"column":19}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":18},"generated":{"line":33,"column":27}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":32},"generated":{"line":33,"column":28}},{"source":"../src/index.js","name":null,"original":{"line":23,"column":8},"generated":{"line":33,"column":29}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":8},"generated":{"line":34,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":8},"generated":{"line":34,"column":4}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":13},"generated":{"line":34,"column":9}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":14},"generated":{"line":34,"column":10}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":8},"generated":{"line":34,"column":11}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":18},"generated":{"line":34,"column":14}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":23},"generated":{"line":34,"column":19}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":18},"generated":{"line":34,"column":27}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":32},"generated":{"line":34,"column":28}},{"source":"../src/index.js","name":null,"original":{"line":24,"column":8},"generated":{"line":34,"column":29}},{"source":"../src/index.js","name":null,"original":{"line":25,"column":5},"generated":{"line":35,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":27,"column":4},"generated":{"line":37,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":27,"column":11},"generated":{"line":37,"column":9}},{"source":"../src/index.js","name":null,"original":{"line":27,"column":4},"generated":{"line":37,"column":14}},{"source":"../src/index.js","name":null,"original":{"line":28,"column":1},"generated":{"line":38,"column":0}},{"source":"../src/index.js","name":null,"original":{"line":15,"column":0},"generated":{"line":38,"column":1}}],"sources":{"../src/index.js":"import { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/math';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {Point} point - The point to write the global value to. If null a new point will be returned\n * @param {boolean} skipUpdate - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {Point} The updated point.\n */\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point = new Point(), skipUpdate = false)\n{\n    if (this.parent)\n    {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    }\n    else\n    {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n"},"lineCount":null}},"error":null,"hash":"f2b3383658e3602e69734779f81e4332","cacheData":{"env":{}}}